**재귀함수

재귀함수는 가독성 Good
but, 재귀함수는 성능적으로는 좋지 않음
입력값이 매우 큰 경우 StackOverFlow발생할 수 있다. -> 사용 x, 반복문이 better
게임 등 매우 높은 성능일 경우 ->재귀x, 반복문이 better

모든 재귀함수는 반복문으로 작성 가능하다. 


**단점이 없는 재귀도 있다**
ㅇ 꼬리호출
 - 함수코드 제일 마지막에서 다른 함수를 호출하는 경우
 - 그 후에 실행하는 명령어가 없음
 -> 스택 프레임을 차지할 필요가 없음.
 -> 컴파일러가 스택프레임을 따로 안 만드는 최적화를 하기도 함
      -내가 사용하는 컴파일러, vm에 따라 지원할 수도 안할 수도 있음
ㅇ 꼬리재귀
 - 마지막 실행되는 명령이 완전 동일해야함 ex) n*f(n-1)은 재귀아님-> 꼬리호출 최적화 제공해도 
				     재귀가 아니므로 스택프레임 할당 됨
 - 꼬리호출과 동일한 혜택 적용가능
 

**브루트포스 알고리즘
 - 모든 경우의 수를 시도하는 알고리즘
 - 최소 o(n)
 - 효율성을 고려하지 않은 알고리즘

ㅇ 키깨기
ㅇ 외판원 문제(TSP문제) -> O(n!)
 N이 커질수록 문제를 푸는 속도가 매우 느려짐
-> 기하급수적 증가(지수시간, 팩토리얼)

